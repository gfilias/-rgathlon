class Product:
    def __init__(self, name, description, price, inventory_level):
        self.name = name
        self.description = description
        self.price = price
        self.inventory_level = inventory_level


class EShopAdmin:
    def __init__(self):
        self.products = self.initialize_products()

    def initialize_products(self):
        # Initialize the list of products with some sample data
        products = [
            Product("Product 1", "Description 1", 10.99, 50),
            Product("Product 2", "Description 2", 19.99, 25),
            Product("Product 3", "Description 3", 8.99, 100)
        ]
        return products

    def manage_products(self):
        print("Product Management")
        print("-------------------")
        print("Existing Products:")
        self.display_product_list()

        product_index = self.select_product()

        if product_index is not None:
            product = self.products[product_index]
            self.display_product_details(product)
            self.process_product(product)
        else:
            print("Invalid product selected.")

    def select_product(self):
        product_count = len(self.products)

        if product_count == 0:
            print("No products found.")
            return None

        print("Select a product to manage:")

        for i, product in enumerate(self.products):
            print(f"{i+1}. {product.name}")

        while True:
            try:
                choice = int(input("Enter the product number (or 0 to cancel): "))
                if 0 <= choice <= product_count:
                    return choice - 1
                else:
                    print("Invalid product number. Please try again.")
            except ValueError:
                print("Invalid input. Please enter a number.")

    def display_product_list(self):
        for i, product in enumerate(self.products):
            print(f"{i+1}. {product.name}")

    def display_product_details(self, product):
        print("\nProduct Details:")
        print(f"Name: {product.name}")
        print(f"Description: {product.description}")
        print(f"Price: ${product.price}")
        print(f"Inventory Level: {product.inventory_level}")

    def process_product(self, product):
        action = input("Press 'E' to edit or 'D' to delete the product (or 'C' to cancel): ")

        if action.lower() == 'e':
            self.edit_product(product)
        elif action.lower() == 'd':
            self.delete_product(product)
        elif action.lower() == 'c':
            return
        else:
            print("Invalid action. Returning to main menu.")

    def edit_product(self, product):
        print("\nEdit Product")
        print("------------")

        product.name = input("Enter the new name: ")
        product.description = input("Enter the new description: ")

        while True:
            try:
                product.price = float(input("Enter the new price: $"))
                break
            except ValueError:
                print("Invalid input. Price must be a number.")

        while True:
            try:
                product.inventory_level = int(input("Enter the new inventory level: "))
                break
            except ValueError:
                print("Invalid input. Inventory level must be an integer.")

        print("Product details updated.")

    def delete_product(self, product):
        confirm = input("Are you sure you want to delete this product? (Y/N): ")

        if confirm.lower() == 'y':
            self.products.remove(product)
            print("Product deleted.")
        else:
            print("Deletion canceled.")
  def add_product(self):
        print("\nAdd New Product")
        print("----------------")

        name = input("Enter the name of the product: ")
        description = input("Enter the description of the product: ")

        while True:
            try:
                price = float(input("Enter the price of the product: $"))
                break
            except ValueError:
                print("Invalid input. Price must be a number.")

        while True:
            try:
                inventory_level = int(input("Enter the inventory level of the product: "))
                break
            except ValueError:
                print("Invalid input. Inventory level must be an integer.")

        new_product = Product(name, description, price, inventory_level)
        self.products.append(new_product)

        print("New product added successfully.")

    def run(self):
        while True:
            print("\nE-Shop Administration")
            print("----------------------")
            print("1. Product Management")
            print("2. Add New Product")
            print("0. Exit")

            choice = input("Enter your choice: ")

            if choice == "1":
                self.manage_products()
            elif choice == "2":
                self.add_product()
            elif choice == "0":
                print("Exiting the program. Goodbye!")
                break
            else:
                print("Invalid choice. Please try again.")


#